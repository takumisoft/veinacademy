///************************************************************
// *  @_Project : Servier
// *  @_Author : German Pichardo
// *
///************************************************************
// *  @_04 : Transitions
// ************************************************************/

@mixin transition-content($property:all,$time:0.5s,$ease:ease) {
	@include transition-property($property);
	@include transition-duration($time);
	@include transition-timing-function($ease);
}

@mixin transition-ease-out($time) {
  -webkit-transition: all $time ease-out;  /* Chrome 1-25, Safari 3.2+ */
  -moz-transition: all $time ease-out;  /* Firefox 4-15 */
  -o-transition: all $time ease-out;  /* Opera 10.50–12.00 */
  -ms-transition: all $time ease-out;  /* Opera 10.50–12.00 */
  transition: all $time ease-out;  /* Chrome 26, Firefox 16+, IE 10+, Opera 12.10+ */
}

@mixin transition-ease-in-out($time) {
  -webkit-transition: all $time ease-in-out;  /* Chrome 1-25, Safari 3.2+ */
  -moz-transition: all $time ease-in-out;  /* Firefox 4-15 */
  -o-transition: all $time ease-in-out;  /* Opera 10.50–12.00 */
  -ms-transition: all $time ease-in-out;  /* Opera 10.50–12.00 */
  transition: all $time ease-in-out;  /* Chrome 26, Firefox 16+, IE 10+, Opera 12.10+ */
}

@mixin transition-linear($time) {
  -webkit-transition: all $time linear;  /* Chrome 1-25, Safari 3.2+ */
  -moz-transition: all $time linear;  /* Firefox 4-15 */
  -o-transition: all $time linear;  /* Opera 10.50–12.00 */
  -ms-transition: all $time linear;  /* Opera 10.50–12.00 */
  transition: all $time linear;  /* Chrome 26, Firefox 16+, IE 10+, Opera 12.10+ */
}

@mixin animate-transition($time) {
  -webkit-animation-duration: $time;
  -moz-animation-duration: $time;
  -o-animation-duration: $time;
  -ms-animation-duration: $time;
  animation-duration: $time;
  -webkit-animation-fill-mode: both;
  -moz-animation-fill-mode: both;
  -o-animation-fill-mode: both;
  -ms-animation-fill-mode: both;
  animation-fill-mode: both
}
@mixin animation-content ($content...) {
  -webkit-animation: $content;  /* Chrome 1-25, Safari 3.2+ */
  -moz-animation: $content;  /* Firefox 4-15 */
  -o-animation: $content;  /* Opera 10.50–12.00 */
  -ms-animation: $content;  /* Opera 10.50–12.00 */
  animation: $content;  /* Chrome 26, Firefox 16+, IE 10+, Opera 12.10+ */
}
@mixin transition-delay($time) {
  -webkit-transition-delay: $time;  /* Chrome 1-25, Safari 3.2+ */
  -moz-transition-delay: $time;  /* Firefox 4-15 */
  -o-transition-delay: $time;  /* Opera 10.50–12.00 */
  -ms-transition-delay: $time;  /* Opera 10.50–12.00 */
  transition-delay: $time;  /* Chrome 26, Firefox 16+, IE 10+, Opera 12.10+ */
}

///************************************************************
// *  @_05 : Transform : Content
// ************************************************************/
//@include transition-content(transform 200ms ease);
//@include transform-content(translateY(-50%));

@mixin transform-content ($content...) {
  -webkit-transform: $content;
  -moz-transform: $content;
  -ms-transform: $content;
  -o-transform: $content;
  transform: $content;
}

///************************************************************
// *  @_05 : Transform : Rotate
// ************************************************************/
//@include transition-content(transform 200ms ease);
//@include transform-rotate(45,left,1000ms);
@mixin transform-rotate($degrees : 360, $origin : center, $time:1.0s) {
  transform               : rotate(#{$degrees}deg);
  -moz-transform          : rotate(#{$degrees}deg);
  -o-transform          : rotate(#{$degrees}deg);
  -ms-transform          : rotate(#{$degrees}deg);
  -webkit-transform       : rotate(#{$degrees}deg);

  transform-origin        : $origin;
  -moz-transform-origin   : $origin;
  -o-transform-origin   : $origin;
  -ms-transform-origin   : $origin;
  -webkit-transform-origin: $origin;

  transition              : transform $time ease all;
  -moz-transition         : -moz-transform $time ease all;
  -o-transition         : -moz-transform $time ease all;
  -ms-transition         : -moz-transform $time ease all;
  -webkit-transition      : -webkit-transform $time ease all;
}
@mixin transform-rotateY($degrees : 360, $origin : center, $time:1.0s) {
  transform               : rotateY(#{$degrees}deg);
  -moz-transform          : rotateY(#{$degrees}deg);
  -o-transform          : rotateY(#{$degrees}deg);
  -ms-transform          : rotateY(#{$degrees}deg);
  -webkit-transform       : rotateY(#{$degrees}deg);

  transform-origin        : $origin;
  -ms-transform-origin    : $origin;
  -o-transform-origin    : $origin;
  -moz-transform-origin   : $origin;
  -webkit-transform-origin: $origin;

  transition              : transform $time ease all;
  -moz-transition         : -moz-transform $time ease all;
  -ms-transition         : -moz-transform $time ease all;
  -o-transition         : -moz-transform $time ease all;
  -webkit-transition      : -webkit-transform $time ease all;
}
@mixin transform-rotateX($degrees : 360, $origin : center, $time:1.0s) {
  transform               : rotateX(#{$degrees}deg);
  -moz-transform          : rotateX(#{$degrees}deg);
  -o-transform          : rotateX(#{$degrees}deg);
  -ms-transform          : rotateX(#{$degrees}deg);
  -webkit-transform       : rotateX(#{$degrees}deg);

  transform-origin        : $origin;
  -moz-transform-origin   : $origin;
  -o-transform-origin   : $origin;
  -ms-transform-origin   : $origin;
  -webkit-transform-origin: $origin;

  transition              : transform $time ease all;
  -moz-transition         : -moz-transform $time ease all;
  -o-transition         : -moz-transform $time ease all;
  -ms-transition         : -moz-transform $time ease all;
  -webkit-transition      : -webkit-transform $time ease all;
}

///************************************************************
// *  @_05 : Transform : Scale
// ************************************************************/
//@include transition-content(transform 200ms ease);
//@include transform-scale(1.3);
@mixin transform-scale($scale: 1) {
  -webkit-transform: scale($scale);
  -moz-transform: scale($scale);
  -ms-transform: scale($scale);
  -o-transform: scale($scale);
  transform: scale($scale);
}
///************************************************************
// *  @_05 : Border-Radius
// ************************************************************/

@mixin border-radius($value) {
  -webkit-border-radius: $value; /* Android ≤ 1.6, iOS 1-3.2, Safari 3-4 */
  border-radius: $value; /* Android 2.1+, Chrome, Firefox 4+, IE 9+, iOS 4+, Opera 10.50+, Safari 5+ */
  -moz-border-radius: $value;
  -o-border-radius: $value;
  -ms-border-radius: $value;
}
// Single side border-radius

@mixin border-top-radius($value) {
  -webkit-border-top-right-radius: $value;
  border-top-right-radius: $value;
  -webkit-border-top-left-radius: $value;
  border-top-left-radius: $value;
  background-clip: padding-box;
}
@mixin border-right-radius($value) {
  -webkit-border-bottom-right-radius: $value;
  border-bottom-right-radius: $value;
  -webkit-border-top-right-radius: $value;
  border-top-right-radius: $value;
  background-clip: padding-box;
}
@mixin border-bottom-radius($value) {
  -webkit-border-bottom-right-radius: $value;
  border-bottom-right-radius: $value;
  -webkit-border-bottom-left-radius: $value;
  border-bottom-left-radius: $value;
  background-clip: padding-box;
}
@mixin border-left-radius($value) {
  -webkit-border-bottom-left-radius: $value;
  border-bottom-left-radius: $value;
  -webkit-border-top-left-radius: $value;
  border-top-left-radius: $value;
  background-clip: padding-box;
}

@mixin border-top-right-radius($value) {
  -webkit-border-top-right-radius: $value;
  border-top-right-radius: $value;
  background-clip: padding-box;
}
@mixin border-top-left-radius($value) {
  -webkit-border-top-left-radius: $value;
  border-top-left-radius: $value;
  background-clip: padding-box;
}
@mixin border-bottom-right-radius($value) {
  -webkit-border-bottom-right-radius: $value;
  border-bottom-right-radius: $value;
  background-clip: padding-box;
}
@mixin border-bottom-left-radius($value) {
  -webkit-border-bottom-left-radius: $value;
  border-bottom-left-radius: $value;
  background-clip: padding-box;
}
///************************************************************
// *  @_06 : Box-Shadow
// ************************************************************/

@mixin box-shadow($value) {
  -webkit-box-shadow: $value !important; /* Android 2.3+, iOS 4.0.2-4.2, Safari 3-4 */
  box-shadow: $value !important; /* Chrome 6+, Firefox 4+, IE 9+, iOS 5+, Opera 10.50+ */
  -moz-box-shadow: $value !important;
}

///************************************************************
// *  @_07 : Text-Shadow
// ************************************************************/

@mixin text-shadow($x: 0, $y: 1px, $blur: 5px, $color: rgba(0,0,0,.4)){
  text-shadow: $x $y $blur $color;
  //text-shadow:white($opacity) 0 1px 0;
}

///************************************************************
// *  @_08 : Opacity
// ************************************************************/

@mixin opacity($value){
  $valueIE:($value*100);
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$valueIE})"; /* IE 8 */
  filter: alpha(opacity=$valueIE); /* IE 5-7 */
  -moz-opacity: $value; /* Netscape */
  -khtml-opacity: $value; /* Safari 1.x */
  opacity: $value; /* Good browsers */
}

///************************************************************
// *  @_11 : Borders (left, right, bottom, top)
// ************************************************************/
@mixin border($border-width: 1px , $border-style: solid , $border-color: transparent){
  border: $border-width $border-style $border-color;
}
@mixin border-left($border-width: 1px , $border-style: solid , $border-color: transparent){
  border-left: $border-width $border-style $border-color;
}
@mixin border-right($border-width: 1px , $border-style: solid , $border-color: transparent){
  border-right: $border-width $border-style $border-color;
}
@mixin border-bottom($border-width: 1px , $border-style: solid , $border-color: transparent){
  border-bottom: $border-width $border-style $border-color;
}
@mixin border-top($border-width: 1px , $border-style: solid , $border-color: transparent){
  border-top: $border-width $border-style $border-color;
}

///************************************************************
// *  @_12 : Font-Size
// ************************************************************/

@mixin font-size($value){
  font-size: $value;
}

///************************************************************
// *  @_13 : Text-Align
// ************************************************************/

@mixin text-align($direction) {
  text-align: $direction;
}

///************************************************************
// *  @_14 : Utilities
// ************************************************************/

@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

@mixin vertical-center ($height,$align:middle) {
  display: table-cell;
  height: $height;
  vertical-align: $align;
}

@mixin text-ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin clearfix() {
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}
@mixin list-style {
  margin: 0;
  padding: 0;
  list-style: none;
}

///************************************************************
// *  @_15 : Arrow
// * @include triangle within a pseudo element and add positioning properties (ie. top, left)
// * $direction: up, down, left, right
// ************************************************************/

@mixin arrow-triangle($direction:down, $size: 6px, $color: #222){
  content: '';
  display: block;
  position: absolute;
  height: 0; width: 0;
  @if ($direction == 'up'){
    border-bottom: $size solid $color;
    border-left: 1/2*$size solid transparent;
    border-right: 1/2*$size solid transparent;
  }
  @else if ($direction == 'down'){
    border-top: 1/2*$size solid $color;
    border-left: 1/2*$size solid transparent;
    border-right: 1/2*$size solid transparent;
  }
  @else if ($direction == 'left'){
    border-top: 1/2*$size solid transparent;
    border-bottom: 1/2*$size solid transparent;
    border-right: $size solid $color;
  }
  @else if ($direction == 'right'){
    border-top: 1/2*$size solid transparent;
    border-bottom: 1/2*$size solid transparent;
    border-left: $size solid $color;
  }
}

///************************************************************
// *  @_15 : Responsive Media queries
// ************************************************************/

@mixin responsive($min: 0, $max: 0) {
  $type: type-of($min);

  @if $type == string {
    $class: $min;

    @if $class == xs {
      @media (max-width: $grid-float-breakpoint-max) { @content; }
    }
    @else if $class == x-xs {
      @media (max-width: $screen-xs) { @content; }
    }
    @else if $class == xs-p {
      @media (max-width: $grid-float-breakpoint-max)and (orientation: portrait)  { @content; }
    }

    @else if $class == xs-l {
      @media (max-width: $grid-float-breakpoint-max)and (orientation: landscape)  { @content; }
    }

    @else if $class == sm {
      @media (min-width: $grid-float-breakpoint) { @content; }
    }

    @else if $class == sm-custom {
      @media (min-width: $grid-float-breakpoint)and (max-width: 1024px) { @content; }
    }
    @else if $class == ipad-l {
      @media (min-width: $grid-float-breakpoint) and (max-width: 1024px) and (orientation : landscape) { @content; }
    }
    @else if $class == ipad-p {
      @media (min-width: $grid-float-breakpoint) and (max-width: 1024px) and (orientation : portrait) { @content; }
    }
    @else if $class == md {
      @media (min-width: $screen-md-min) { @content; }
    }

    @else if $class == lg {
      @media (min-width: $screen-lg-min) { @content; }
    }

    @else {
      @warn "Breakpoint mixin supports: x-xs, xs, xs-p, xs-l, sm, sm-custom, md, lg";
    }
  }
  @else if $type == number {
    $query: "all" !default;
    @if $min != 0 and $max != 0 {
      $query: "(min-width: #{$min}) and (max-width: #{$max})";
    }
    @else if $min != 0 and $max == 0 {
      $query: "(min-width: #{$min})";
    }
    @else if $min == 0 and $max != 0 {
      $query: "(max-width: #{$max})";
    }
    @media #{$query} {
      @content;
    }
  }
}
// EXAMPLES:

// @include responsive($min: 321px, $max: 479px) {
// 	background-color: red;
// }

// aside.primary {
//   @include responsive(md) {
//     float: right;
//     width: 350px;
//   }
//   @include responsive(480px) {
//     display: none;
//   }
//   @include responsive($min: 640px, $max: 767px) {
//     text-align: center;
//     font-style: italic;
//   }
// }

///************************************************************
// *  @_16 : Gradients Linear
// ************************************************************/

@mixin linear-gradient( $start: #f1f1f1, $from: 0%, $stop: #d9d9d9, $to: 100% ) {

  background: $start;

  background: -webkit-gradient(linear, left top, left bottom, from(ie-hex-str($start)), to(ie-hex-str($stop)));

  background: -moz-linear-gradient(center top, $start $from, $stop $to);

  //  background: -moz-gradient(center top, $start $from, $stop $to);

  background: -webkit-linear-gradient(top, $start $from,$stop $to);

  background: -o-linear-gradient(top, $start $from,$stop $to);

  background: -ms-linear-gradient(top, $start $from,$stop $to);

  background: linear-gradient(to bottom, $start $from,$stop $to);

  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{ie-hex-str($start)}', endColorstr='#{ie-hex-str($stop)}',GradientType=0 );

  //  filter: none\0/IE9;
}

///************************************************************
// *  @_16 : Gradients Center
// ************************************************************/

@mixin center-gradient( $start: #f1f1f1, $from: 0%, $stop: #d9d9d9, $to: 100% ) {
  background: $start;
  background: -moz-radial-gradient(center, ellipse cover,  $start $from, $stop $to, $start $to);
  background: -webkit-gradient(radial, center center, 0px, center center, $to, color-stop(0%,$start), color-stop($to,$stop), color-stop($to,$start));
  background: -webkit-radial-gradient(center, ellipse cover,  $start $from,$stop $to,$start $to);
  background: -o-radial-gradient(center, ellipse cover,  $start $from,$stop $to,$start $to);
  background: -ms-radial-gradient(center, ellipse cover,  $start $from,$stop $to,$start $to);
  background: radial-gradient(ellipse at center,  $start $from,$stop $to,$start $to);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{ie-hex-str($start)}', endColorstr='#{ie-hex-str($stop)}',GradientType=1 );
}

///************************************************************
// *  @_17 : Placeholders
// ************************************************************/
@mixin placeholder-custom($color: red, $alpha: .8) {

  &::-webkit-input-placeholder {
    color: rgba($color, $alpha);
  }  /* WebKit browsers */

  &:-moz-placeholder {
    color: rgba($color, 1)
  }  /* Mozilla Firefox 4 to 18 */

  &::-moz-placeholder {
    color: rgba($color, 1)
  }  /* Mozilla Firefox 19+ */

  &:-ms-input-placeholder {
    color: rgba($color, $alpha)
  } /* Internet Explorer 10+ */
}
///************************************************************
// *  @_18 : Hover
// ************************************************************/

@mixin hover-focus-active {
  &:hover,
  &:active,
  &:focus {
    @content;
  }
}

// Button Style
@mixin button-variant-custom($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;
  &:focus,
  &.focus {
    color: $color;
    background-color: darken($background, 10%);
    border-color: darken($border, 25%);
  }
  &:hover {
    color: $color;
    background-color: darken($background, 10%);
    border-color: darken($border, 12%);
  }
}

///************************************************************
// *  @_04 : Column Padding
// ************************************************************/
@mixin colPadding ($padding:0) {
  > [class*='col-'] {
    padding-left:#{$padding}px;
    padding-right:#{$padding}px;
  }
}

///************************************************************
// *  Background
// ************************************************************/
@mixin background($imgPath,$position:0 0,$size:cover,$repeat: no-repeat) {
  background: {
    image: url($imgPath);
    position: $position;
    size: $size;
    repeat: $repeat;
  }
}
//@include background('/my/img/path.png');


///************************************************************
// *  vertical-truncate
// ************************************************************/
@mixin vertical-truncate ($font-size:18px,$line-height:1.3,$lines-to-show:4) {

  height: $font-size*$line-height*$lines-to-show; /* Fallback for non-webkit */
  font-size: $font-size;
  line-height: $line-height;

  -webkit-line-clamp: $lines-to-show;
  -moz-line-clamp: $lines-to-show;
  line-clamp: $lines-to-show;

  position: relative;
  display: block; /* Fallback for non-webkit */
  display: -webkit-box;

  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  -ms-box-orient: vertical;
  box-orient: vertical;

  -ms-text-overflow: ellipsis;
  text-overflow: ellipsis;

  overflow: hidden;
  width: 100%;

}

///************************************************************
// *  Covered
// ************************************************************/
@mixin covered( $width: 100%, $height: 100%,$top: 0,$right: 0,$bottom: 0, $left: 0) {
  position: absolute;
  top: $top;
  left: $left;
  right: $right;
  bottom: $bottom;
  width: $width;
  height: $height;
}

///************************************************************
// *  Background
// ************************************************************/
// background-size
@mixin background-size($size:cover) {
  -webkit-background-size: $size;
  -moz-background-size:    $size;
  -o-background-size:      $size;
  background-size:         $size;
}

@mixin background-cover($position:center center,$size:cover,$repeat: no-repeat) {
  @include background-size($size);
	background-position:     $position;
	background-repeat:       $repeat;
}
///************************************************************
// * embed-ratio
// ************************************************************/
@mixin embed-ratio($ratio: 16 9) {
	$type: type-of($ratio);
	&:before {
		content: '';
		display: block;
		width: 100%;
		@if $type == list and length($ratio) == 2  {
			padding-bottom: percentage(nth($ratio, 2) / nth($ratio, 1));
		}
		@else if $type == number and unit($ratio) == '%' {
			padding-bottom: $ratio;
		}
		@else {
			@error "Sorry, but `#{$ratio}` does not contain any associated unit (%)";
		}
	}
}

///************************************************************
// *  Keyframes
// ************************************************************/

@mixin keyframes($name) {
	@-webkit-keyframes #{$name} {
		@content;
	}
	@-moz-keyframes #{$name} {
		@content;
	}
	@-ms-keyframes #{$name} {
		@content;
	}
	@keyframes #{$name} {
		@content;
	}
}
